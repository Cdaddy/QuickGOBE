#! /bin/bash

#fail on error
set -e

VALID_USERS=("uni_qgo" "eddturner");

# source required scripts
if ! source "../common/common.variables" && ! source "../common/common"; then
    echo "Required properties files were not found. Please make sure you're in the right directory";
    exit 1;
fi

if [ $# -ne 4 ]; then
    echo "${0} expects 4 arguments: 1.) the configuration release directory, 2.) profile, 3.) core, 4.) vm"
    exit 1;
else
   conf_release_dir=$1;
   requestedProfile=$2;
   requestedCore=$3;
   requestedVM=$4;
fi

QUICKGO_LIB_PATH="$requestedProfile/$requestedVM/lib/quickgo/$requestedCore"

if [ ! -d "$conf_release_dir" ]; then
    echo "Release directory does not exist: $conf_release_dir";
    exit 1;
else
    target_lib_dir="${conf_release_dir}/lib/quickgo"

    mkdir -p "$target_lib_dir"
fi

cd "$QUICKGO_REPO_DIR"

# fetch the indexing jar

git fetch
git checkout "$QUICKGO_BRANCH"
git pull
mvn -U -DskipTests -P indexing,solr-plugins package

#copy QuickGO jar
mkdir -p "$target_lib_dir"
mv ./indexing/target/*.jar "$target_lib_dir"

echo "Copied QuickGO indexing libraries into ${target_lib_dir}"

#fetch the Solr plugin jars
mv ./solr-plugin/target/*.jar "$target_lib_dir"

echo "Copied QuickGO Solr plugins into ${target_lib_dir}"

# update symlink to the latest version of the indexing jar
symlink_name="${SOLR_CONFIG_DIR}/${QUICKGO_LIB_PATH}"
if [ ! -d "$(dirname $symlink_name)" ]; then
    mkdir -p "$(dirname $symlink_name)";
fi

ln -snf "$target_lib_dir" "${SOLR_CONFIG_DIR}/${QUICKGO_LIB_PATH}"

prettyEcho "<success>Symlink</success> ${target_lib_dir} has been <success>updated</success> with new library definitions"
echo
ls -l "${SOLR_CONFIG_DIR}/${QUICKGO_LIB_PATH}" | sed -e 's/^/    /g';
echo
