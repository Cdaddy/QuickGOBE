## ================= Search =================
# the fields to return in search results from a solr query
# ontology search: if you define a value, ensure ontologyType is also included
search:
  external:
    filterConfigs:
      - signature: descendants,evidenceCode,evidenceCodeUsageRelationships
        execution: REST_COMM
        properties: {
          ip: "http://ves-hx-c2:8082",
          resourceFormat: "/ontology/eco/terms/{evidenceCode}/descendants?relations={evidenceCodeUsageRelationships}",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.model.ConvertedOntologyFilter",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.converter.DescendantsFilterConverter"
        }
      - signature: descendants,goId,goUsageRelationships
        execution: REST_COMM
        properties: {
          ip: "http://ves-hx-c2:8082",
          resourceFormat: "/QuickGO/services/go/terms/{goId}/descendants?relations={goUsageRelationships}",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.model.ConvertedOntologyFilter",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.converter.DescendantsFilterConverter"
        }
      - signature: goId,goUsageRelationships,slim
        execution: REST_COMM
        properties: {
          ip: "http://ves-hx-c2:8082",
          resourceFormat: "/QuickGO/services/go/terms/{goId}/descendants?relations={goUsageRelationships}",
          responseClass: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.model.ConvertedOntologyFilter",
          responseConverter: "uk.ac.ebi.quickgo.annotation.service.comm.rest.ontology.converter.SlimmingFilterConverter"
        }
model:
  repo2domainFieldNameTransformations:
    transformations: {
      goId_join: goId
    }
