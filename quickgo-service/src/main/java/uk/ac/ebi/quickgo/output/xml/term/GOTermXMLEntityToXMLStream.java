package uk.ac.ebi.quickgo.output.xml.term;

import uk.ac.ebi.quickgo.output.xml.XMLEntityToStream;
import uk.ac.ebi.quickgo.output.xml.model.XMLEntity;
import uk.ac.ebi.quickgo.output.xml.term.model.GOTermOBOXML;
import uk.ac.ebi.quickgo.output.xml.term.model.GOTermXML;
import uk.ac.ebi.quickgo.render.Format;
import uk.ac.ebi.quickgo.xml.term.*;

import java.io.OutputStream;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;

/**
 * To convert a XML entity into a XML stream
 * @author cbonill
 *
 */
public class GOTermXMLEntityToXMLStream implements XMLEntityToStream<XMLEntity> {

    @Override
    public void convert(XMLEntity xmlEntity, Format format, OutputStream outputStream) throws JAXBException {

        if (format == Format.OBOXML) {

            ObjectFactory objectFactory = new ObjectFactory();

            // Synonym
            Synonymtypedef synonymtypedef = objectFactory.createSynonymtypedef();
            synonymtypedef.setId("systematic_synonym");
            synonymtypedef.setName("Systematic synonym");
            synonymtypedef.setScope("EXACT");

            // Header
            Headertypedef headertypedef = objectFactory.createHeadertypedef();
            headertypedef.setFormatVersion("1.2");
            headertypedef
                    .setAutoGeneratedBy("QuickGO: http://www.ebi.ac.uk/QuickGO");
            headertypedef.setSynonymtypedef(synonymtypedef);
            headertypedef.setDefaultNamespace("gene_ontology");
            headertypedef
                    .setRemark(
                            "This is not the master copy of the OBO files, see http://www.geneontology.org/GO" +
                                    ".downloads.ontology.shtml");

            Obotypedef obotypedef = objectFactory.createObotypedef();
            obotypedef.setHeader(headertypedef);
            obotypedef.setTerm((Termdeftype) ((GOTermOBOXML) xmlEntity).getXmlRepresentation());

            JAXBContext context = JAXBContext.newInstance("ebi.ac.uk.quickgo");
            JAXBElement<Obotypedef> element = objectFactory.createObo(obotypedef);
            Marshaller marshaller = context.createMarshaller();
            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            marshaller.setProperty(Marshaller.JAXB_FRAGMENT, true);
            marshaller.marshal(element, outputStream);

        } else if (format == Format.XML) {
            ObjectFactory objectFactory = new ObjectFactory();

            JAXBContext context = JAXBContext.newInstance("ebi.ac.uk.ws.quickgo");
            JAXBElement<Lookupdeftype> element =
                    objectFactory.createLookup((Lookupdeftype) ((GOTermXML) xmlEntity).getXmlRepresentation());
            ;
            Marshaller marshaller = context.createMarshaller();
            marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            marshaller.setProperty(Marshaller.JAXB_FRAGMENT, true);
            marshaller.marshal(element, outputStream);
        }
    }
}