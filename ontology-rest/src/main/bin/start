#! /bin/bash

set -euo pipefail
IFS=$'\n\t '

# check the right user runs this
if [ $USER != "edd" ] ; then
    echo "This service can only be run as user, 'uni_adm'";
    exit 1;
fi;

if [ ! -f "environment.variables" ]; then
    echo "Please create a file called, environment.variables, containing the necessary environment variables."
    exit 1;
fi
source "environment.variables"

PIDFILE="$SERVICE_PATH/run.pid"
SERVICE_JAR="$JAR"

if [ -e $PIDFILE ]
then
    echo "Service has already been started: $(cat $PIDFILE)"
    exit 1
fi

# save current directory
pushd . > /dev/null

cd $SERVICE_PATH

ls -1 $SERVICE_JAR > /dev/null 2>&1
if [ ! $? ]; then
    echo "Error: $SERVICE_PATH/$SERVICE_JAR does not exist. Aborting."
    exit 1
fi

if [ -z "$JAVA_HOME" ]; then
    echo "JAVA_HOME environment variable must be set. Aborting."
    exit 1;
fi

JAVA=$JAVA_HOME/bin/java
JVM_MEM_MAX="-Xms1024M"
JVM_MEM_MIN="-Xmx3096M"
JAVA_OPTS="-Dcom.sun.management.jmxremote  \
            -Dcom.sun.management.jmxremote.authenticate=false \
            -Dcom.sun.management.jmxremote.ssl=false  \
            -Dcom.sun.management.jmxremote.port=9091"
JAVA_OPTS="$JAVA_OPTS \
            -XX:+UnlockCommercialFeatures \
            -XX:+FlightRecorder \
            -XX:FlightRecorderOptions=loglevel=debug"

RUN_COMMAND="$JAVA $JVM_MEM_MIN $JVM_MEM_MAX $JAVA_OPTS -jar -Dserver.port=$PORT $SERVICE_JAR"

echo "Running: $RUN_COMMAND"
# run the application headless
#nohup $RUN_COMMAND > /dev/null 2>&1 &
nohup $RUN_COMMAND &
PID="$!"
echo "$PID $(hostname)" > $PIDFILE

# jump back to current directory
popd > /dev/null

echo "Service was started with PID, $PID, on host, $(hostname)"